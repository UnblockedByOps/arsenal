###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###

[app:main]
use = egg:ArsenalWeb

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm

# Arsenal Settings
###################################
arsenal.timezone = US/Pacific
arsenal.secrets_file = /app/arsenal_web/conf/arsenal_secrets.ini

arsenal.verify_ssl = False
arsenal.api_protocol = https

# Set to local to use local users/groups
arsenal.use_ldap = 
arsenal.ldap_server = ldaps://domain.com
arsenal.ldap_port = 3269
arsenal.ldap_cert = /etc/pki/CA/certs/domain.crt
arsenal.ldap_bind = ldapauth
arsenal.login_base_dn = 
arsenal.group_base_dn = 

# ldap and pam are mutually exclusive.
arsenal.use_pam = true
arsenal.pam_admin_group = arsenal_admins

# Secure tags
arsenal.secure_tags.list =
  .*_prod$
  ^sec_
arsenal.secure_tags.groups =
  arsenal_admins
  secure_tags

# ENC - These statuses match setup,inservice,broken,maintenance
arsenal.enc.status_ids =
  3
  4
  8
  9

# Existence of this file will make /healthcheck respond with an http
# 200. If the file is absent /heathcheck will respond with an http 503.
arsenal.healthcheck_file = /tmp/healthcheck.txt

# This is is the map that governs what status gets assigned to a
# physical_device when the status of a node associated with that
# physical_device changes. The status name in the key is the node's
# status, the value is the physical_device's status. If a node
# status is not defined here, the physical device status will not
# be changed.
arsenal.node_hw_map.available    = available
arsenal.node_hw_map.broken       = broken
arsenal.node_hw_map.decom        = available
arsenal.node_hw_map.initializing = allocated
arsenal.node_hw_map.inservice    = allocated
arsenal.node_hw_map.installed    = allocated
arsenal.node_hw_map.maintenance  = allocated
arsenal.node_hw_map.setup        = allocated

# Read with SafeConfigParser
[app:safe]
arsenal.login_filter = (&(objectClass=user)(sAMAccountName=%%(login)s))
arsenal.group_filter = (&(objectCategory=group)(member=%%(userdn)s))

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8281

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, arsenalweb, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[logger_arsenalweb]
level = DEBUG
handlers =
qualname = arsenalweb

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
