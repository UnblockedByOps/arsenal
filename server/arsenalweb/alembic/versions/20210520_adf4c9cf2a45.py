"""init

Revision ID: adf4c9cf2a45
Revises: 
Create Date: 2021-05-20 09:11:12.206118

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'adf4c9cf2a45'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_centers_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_data_centers_audit'))
    )
    op.create_table('ec2_instances',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('account_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('ami_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('hostname', sa.VARCHAR(length=255), nullable=False),
    sa.Column('instance_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('instance_type', sa.VARCHAR(length=255), nullable=False),
    sa.Column('availability_zone', sa.VARCHAR(length=255), nullable=False),
    sa.Column('profile', sa.VARCHAR(length=255), nullable=False),
    sa.Column('reservation_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('security_groups', sa.VARCHAR(length=255), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ec2_instances'))
    )
    op.create_index('idx_ec2_id', 'ec2_instances', ['id'], unique=False)
    op.create_index('idx_ec2_instance_id', 'ec2_instances', ['instance_id'], unique=True)
    op.create_table('ec2_instances_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ec2_instances_audit'))
    )
    op.create_table('group_perms',
    sa.Column('id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_group_perms'))
    )
    op.create_index('idx_group_perms_unique', 'group_perms', ['name'], unique=True, mysql_length=255)
    op.create_table('groups',
    sa.Column('id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_groups'))
    )
    op.create_index('idx_group_name_unique', 'groups', ['name'], unique=True, mysql_length=255)
    op.create_table('hardware_profiles',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('model', sa.VARCHAR(length=255), nullable=False),
    sa.Column('manufacturer', sa.VARCHAR(length=255), nullable=False),
    sa.Column('rack_u', sa.Integer(), nullable=False),
    sa.Column('rack_color', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hardware_profiles'))
    )
    op.create_index('idx_hardware_profile_id', 'hardware_profiles', ['id'], unique=False)
    op.create_index('idx_uniq_hardware_profile', 'hardware_profiles', ['name'], unique=True)
    op.create_table('hardware_profiles_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hardware_profiles_audit'))
    )
    op.create_table('ip_addresses',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ip_addresses'))
    )
    op.create_index('idx_ip_address_uniq', 'ip_addresses', ['ip_address'], unique=True)
    op.create_table('ip_addresses_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ip_addresses_audit'))
    )
    op.create_table('network_interfaces_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_network_interfaces_audit'))
    )
    op.create_table('node_groups',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('owner', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('notes_url', sa.Text(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_node_groups'))
    )
    op.create_index('idx_node_group_id', 'node_groups', ['id'], unique=False)
    op.create_index('idx_unique_node_group_name', 'node_groups', ['name'], unique=True)
    op.create_table('node_groups_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_node_groups_audit'))
    )
    op.create_table('nodes_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nodes_audit'))
    )
    op.create_table('operating_systems',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('variant', sa.VARCHAR(length=255), nullable=False),
    sa.Column('version_number', sa.VARCHAR(length=255), nullable=False),
    sa.Column('architecture', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_operating_systems'))
    )
    op.create_index('idx_operating_systems_id', 'operating_systems', ['id'], unique=False)
    op.create_index('idx_operating_systems_uniq', 'operating_systems', ['name'], unique=True)
    op.create_table('operating_systems_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_operating_systems_audit'))
    )
    op.create_table('physical_devices_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_devices_audit'))
    )
    op.create_table('physical_elevations_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_elevations_audit'))
    )
    op.create_table('physical_locations',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('provider', sa.Text(), nullable=True),
    sa.Column('address_1', sa.Text(), nullable=True),
    sa.Column('address_2', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('admin_area', sa.Text(), nullable=True),
    sa.Column('country', sa.Text(), nullable=True),
    sa.Column('postal_code', sa.Text(), nullable=True),
    sa.Column('contact_name', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.Text(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_locations'))
    )
    op.create_index('idx_physical_location_id', 'physical_locations', ['id'], unique=False)
    op.create_index('idx_physical_location_name', 'physical_locations', ['name'], unique=True)
    op.create_table('physical_locations_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_locations_audit'))
    )
    op.create_table('physical_racks_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_racks_audit'))
    )
    op.create_table('statuses',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_statuses'))
    )
    op.create_index('idx_status_name_id', 'statuses', ['id'], unique=False)
    op.create_index('idx_status_name_uniq', 'statuses', ['name'], unique=True)
    op.create_table('statuses_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_statuses_audit'))
    )
    op.create_table('tags',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('value', sa.VARCHAR(length=255), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
    sa.UniqueConstraint('name', 'value', name='idx_uniq_tag')
    )
    op.create_index('idx_tag_id', 'tags', ['id'], unique=False)
    op.create_table('tags_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=False),
    sa.Column('new_value', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags_audit'))
    )
    op.create_table('users',
    sa.Column('id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('salt', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index('idx_user_name_unique', 'users', ['name'], unique=True, mysql_length=255)
    op.create_table('data_centers',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('status_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], name=op.f('fk_data_centers_status_id_statuses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_data_centers'))
    )
    op.create_index('idx_data_center_id', 'data_centers', ['id'], unique=False)
    op.create_index('idx_unique_data_center_name', 'data_centers', ['name'], unique=True)
    op.create_table('group_perm_assignments',
    sa.Column('group_id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=True),
    sa.Column('perm_id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_group_perm_assignments_group_id_groups')),
    sa.ForeignKeyConstraint(['perm_id'], ['group_perms.id'], name=op.f('fk_group_perm_assignments_perm_id_group_perms'))
    )
    op.create_table('local_user_group_assignments',
    sa.Column('user_id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=True),
    sa.Column('group_id', mysql.MEDIUMINT(display_width=9, unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_local_user_group_assignments_group_id_groups')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_local_user_group_assignments_user_id_users'))
    )
    op.create_table('network_interfaces',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('unique_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('ip_address_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('bond_master', sa.Text(), nullable=True),
    sa.Column('port_description', sa.Text(), nullable=True),
    sa.Column('port_number', sa.Text(), nullable=True),
    sa.Column('port_switch', sa.Text(), nullable=True),
    sa.Column('port_vlan', sa.Text(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.ForeignKeyConstraint(['ip_address_id'], ['ip_addresses.id'], name=op.f('fk_network_interfaces_ip_address_id_ip_addresses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_network_interfaces'))
    )
    op.create_index('idx_network_interface_id', 'network_interfaces', ['id'], unique=False)
    op.create_index('idx_unique_network_interface_unique_id', 'network_interfaces', ['unique_id'], unique=True)
    op.create_table('physical_racks',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('physical_location_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('server_subnet', sa.VARCHAR(length=255), nullable=True),
    sa.Column('oob_subnet', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.ForeignKeyConstraint(['physical_location_id'], ['physical_locations.id'], name=op.f('fk_physical_racks_physical_location_id_physical_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_racks')),
    sa.UniqueConstraint('name', 'physical_location_id', name='idx_physical_rack_location')
    )
    op.create_index('idx_physical_rack_id', 'physical_racks', ['id'], unique=False)
    op.create_table('tag_node_group_assignments',
    sa.Column('node_group_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('tag_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['node_group_id'], ['node_groups.id'], name=op.f('fk_tag_node_group_assignments_node_group_id_node_groups')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_tag_node_group_assignments_tag_id_tags'))
    )
    op.create_table('physical_elevations',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('elevation', sa.VARCHAR(length=11), nullable=False),
    sa.Column('physical_rack_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.ForeignKeyConstraint(['physical_rack_id'], ['physical_racks.id'], name=op.f('fk_physical_elevations_physical_rack_id_physical_racks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_elevations')),
    sa.UniqueConstraint('elevation', 'physical_rack_id', name='idx_physical_elevation_location')
    )
    op.create_index('idx_physical_elevation_id', 'physical_elevations', ['id'], unique=True)
    op.create_table('tag_data_center_assignments',
    sa.Column('data_center_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('tag_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['data_center_id'], ['data_centers.id'], name=op.f('fk_tag_data_center_assignments_data_center_id_data_centers')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_tag_data_center_assignments_tag_id_tags'))
    )
    op.create_table('physical_devices',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('serial_number', sa.VARCHAR(length=255), nullable=False),
    sa.Column('physical_location_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('physical_rack_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('physical_elevation_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('status_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('mac_address_1', sa.VARCHAR(length=255), nullable=False),
    sa.Column('mac_address_2', sa.VARCHAR(length=255), nullable=True),
    sa.Column('hardware_profile_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('oob_ip_address', sa.VARCHAR(length=255), nullable=True),
    sa.Column('oob_mac_address', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.ForeignKeyConstraint(['hardware_profile_id'], ['hardware_profiles.id'], name=op.f('fk_physical_devices_hardware_profile_id_hardware_profiles')),
    sa.ForeignKeyConstraint(['physical_elevation_id'], ['physical_elevations.id'], name=op.f('fk_physical_devices_physical_elevation_id_physical_elevations')),
    sa.ForeignKeyConstraint(['physical_location_id'], ['physical_locations.id'], name=op.f('fk_physical_devices_physical_location_id_physical_locations')),
    sa.ForeignKeyConstraint(['physical_rack_id'], ['physical_racks.id'], name=op.f('fk_physical_devices_physical_rack_id_physical_racks')),
    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], name=op.f('fk_physical_devices_status_id_statuses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_physical_devices')),
    sa.UniqueConstraint('physical_rack_id', 'physical_elevation_id', name='idx_physical_device_rack_elevation')
    )
    op.create_index('idx_physical_device_id', 'physical_devices', ['id'], unique=False)
    op.create_index('idx_physical_device_serial_number', 'physical_devices', ['serial_number'], unique=True)
    op.create_table('nodes',
    sa.Column('id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('unique_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('status_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('hardware_profile_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('operating_system_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('ec2_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('data_center_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('uptime', sa.VARCHAR(length=255), nullable=True),
    sa.Column('serial_number', sa.VARCHAR(length=255), nullable=True),
    sa.Column('os_memory', sa.VARCHAR(length=255), nullable=True),
    sa.Column('processor_count', sa.Integer(), nullable=True),
    sa.Column('last_registered', sa.TIMESTAMP(), nullable=True),
    sa.Column('created', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_by', sa.VARCHAR(length=200), nullable=False),
    sa.ForeignKeyConstraint(['data_center_id'], ['data_centers.id'], name=op.f('fk_nodes_data_center_id_data_centers')),
    sa.ForeignKeyConstraint(['ec2_id'], ['ec2_instances.id'], name=op.f('fk_nodes_ec2_id_ec2_instances')),
    sa.ForeignKeyConstraint(['hardware_profile_id'], ['hardware_profiles.id'], name=op.f('fk_nodes_hardware_profile_id_hardware_profiles')),
    sa.ForeignKeyConstraint(['operating_system_id'], ['operating_systems.id'], name=op.f('fk_nodes_operating_system_id_operating_systems')),
    sa.ForeignKeyConstraint(['serial_number'], ['physical_devices.serial_number'], name=op.f('fk_nodes_serial_number_physical_devices')),
    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], name=op.f('fk_nodes_status_id_statuses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nodes'))
    )
    op.create_index('idx_node_ec2_id', 'nodes', ['ec2_id'], unique=True)
    op.create_index('idx_node_id', 'nodes', ['id'], unique=False)
    op.create_index('idx_node_name', 'nodes', ['name'], unique=False)
    op.create_index('idx_node_serial_number', 'nodes', ['serial_number'], unique=False)
    op.create_table('tag_physical_device_assignments',
    sa.Column('physical_device_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('tag_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['physical_device_id'], ['physical_devices.id'], name=op.f('fk_tag_physical_device_assignments_physical_device_id_physical_devices')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_tag_physical_device_assignments_tag_id_tags'))
    )
    op.create_table('hypervisor_vm_assignments',
    sa.Column('hypervisor_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('guest_vm_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['guest_vm_id'], ['nodes.id'], name=op.f('fk_hypervisor_vm_assignments_guest_vm_id_nodes')),
    sa.ForeignKeyConstraint(['hypervisor_id'], ['nodes.id'], name=op.f('fk_hypervisor_vm_assignments_hypervisor_id_nodes'))
    )
    op.create_table('network_interface_assignments',
    sa.Column('node_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('network_interface_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['network_interface_id'], ['network_interfaces.id'], name=op.f('fk_network_interface_assignments_network_interface_id_network_interfaces')),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name=op.f('fk_network_interface_assignments_node_id_nodes'))
    )
    op.create_table('node_group_assignments',
    sa.Column('node_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('node_group_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['node_group_id'], ['node_groups.id'], name=op.f('fk_node_group_assignments_node_group_id_node_groups')),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name=op.f('fk_node_group_assignments_node_id_nodes'))
    )
    op.create_table('tag_node_assignments',
    sa.Column('node_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.Column('tag_id', mysql.INTEGER(unsigned=True), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], name=op.f('fk_tag_node_assignments_node_id_nodes')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_tag_node_assignments_tag_id_tags'))
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag_node_assignments')
    op.drop_table('node_group_assignments')
    op.drop_table('network_interface_assignments')
    op.drop_table('hypervisor_vm_assignments')
    op.drop_table('tag_physical_device_assignments')
    op.drop_index('idx_node_serial_number', table_name='nodes')
    op.drop_index('idx_node_name', table_name='nodes')
    op.drop_index('idx_node_id', table_name='nodes')
    op.drop_index('idx_node_ec2_id', table_name='nodes')
    op.drop_table('nodes')
    op.drop_index('idx_physical_device_serial_number', table_name='physical_devices')
    op.drop_index('idx_physical_device_id', table_name='physical_devices')
    op.drop_table('physical_devices')
    op.drop_table('tag_data_center_assignments')
    op.drop_index('idx_physical_elevation_id', table_name='physical_elevations')
    op.drop_table('physical_elevations')
    op.drop_table('tag_node_group_assignments')
    op.drop_index('idx_physical_rack_id', table_name='physical_racks')
    op.drop_table('physical_racks')
    op.drop_index('idx_unique_network_interface_unique_id', table_name='network_interfaces')
    op.drop_index('idx_network_interface_id', table_name='network_interfaces')
    op.drop_table('network_interfaces')
    op.drop_table('local_user_group_assignments')
    op.drop_table('group_perm_assignments')
    op.drop_index('idx_unique_data_center_name', table_name='data_centers')
    op.drop_index('idx_data_center_id', table_name='data_centers')
    op.drop_table('data_centers')
    op.drop_index('idx_user_name_unique', table_name='users')
    op.drop_table('users')
    op.drop_table('tags_audit')
    op.drop_index('idx_tag_id', table_name='tags')
    op.drop_table('tags')
    op.drop_table('statuses_audit')
    op.drop_index('idx_status_name_uniq', table_name='statuses')
    op.drop_index('idx_status_name_id', table_name='statuses')
    op.drop_table('statuses')
    op.drop_table('physical_racks_audit')
    op.drop_table('physical_locations_audit')
    op.drop_index('idx_physical_location_name', table_name='physical_locations')
    op.drop_index('idx_physical_location_id', table_name='physical_locations')
    op.drop_table('physical_locations')
    op.drop_table('physical_elevations_audit')
    op.drop_table('physical_devices_audit')
    op.drop_table('operating_systems_audit')
    op.drop_index('idx_operating_systems_uniq', table_name='operating_systems')
    op.drop_index('idx_operating_systems_id', table_name='operating_systems')
    op.drop_table('operating_systems')
    op.drop_table('nodes_audit')
    op.drop_table('node_groups_audit')
    op.drop_index('idx_unique_node_group_name', table_name='node_groups')
    op.drop_index('idx_node_group_id', table_name='node_groups')
    op.drop_table('node_groups')
    op.drop_table('network_interfaces_audit')
    op.drop_table('ip_addresses_audit')
    op.drop_index('idx_ip_address_uniq', table_name='ip_addresses')
    op.drop_table('ip_addresses')
    op.drop_table('hardware_profiles_audit')
    op.drop_index('idx_uniq_hardware_profile', table_name='hardware_profiles')
    op.drop_index('idx_hardware_profile_id', table_name='hardware_profiles')
    op.drop_table('hardware_profiles')
    op.drop_index('idx_group_name_unique', table_name='groups')
    op.drop_table('groups')
    op.drop_index('idx_group_perms_unique', table_name='group_perms')
    op.drop_table('group_perms')
    op.drop_table('ec2_instances_audit')
    op.drop_index('idx_ec2_instance_id', table_name='ec2_instances')
    op.drop_index('idx_ec2_id', table_name='ec2_instances')
    op.drop_table('ec2_instances')
    op.drop_table('data_centers_audit')
    # ### end Alembic commands ###
